"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var styles={"responsive-table-js":"responsive-table-js"},isTableNode=function(e){return e.tagName&&"table"===e.tagName.toLowerCase()},isNotEmpty=function(e){return e.rows&&e.rows.length>0},hasTableHeader=function(e){return e.rows[0].cells[0]&&"th"===e.rows[0].cells[0].tagName.toLowerCase()},collectHeadersFromTable=function(e){return _toConsumableArray(e.rows[0].cells).map(function(e){return String(e.innerText||e.textContent).trim()})},ResponsiveTables=function(){function e(){_classCallCheck(this,e)}return _createClass(e,null,[{key:"applyTo",value:function(t){"string"==typeof t&&(t=document.querySelectorAll(t)),"function"===t.toArray&&(t=t.toArray());var r=_toConsumableArray(t).filter(isTableNode).filter(isNotEmpty).filter(hasTableHeader);r.forEach(e.applyToTable),r.forEach(function(e){return e.classList.add(styles["responsive-table-js"])})}},{key:"applyToTable",value:function(e){if("object"!==_typeof(e)||!isTableNode(e))throw new Error(e+" must be a table node");for(var t=collectHeadersFromTable(e),r=1;r<e.rows.length;++r)_toConsumableArray(e.rows[r].cells).map(function(e,r){return e.dataset.responsiveTablesLabel=t[r]||""})}}]),e}();
//# sourceMappingURL=responsive-tables.min.js.map
