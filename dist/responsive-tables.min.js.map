{"version":3,"sources":["responsive-tables.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","toString","call","Array","from","isArray","arr2","styles","responsive-table-js","isTableNode","node","tagName","toLowerCase","isNotEmpty","table","rows","hasTableHeader","cells","collectHeadersFromTable","map","cell","String","innerText","textContent","trim","ResponsiveTables","this","value","elements","document","querySelectorAll","toArray","tables","filter","forEach","applyToTable","classList","add","Error","headers","dataset","responsiveTablesLabel"],"mappings":"AAAA,aAEA,SAASA,QAAQC,GAAwT,OAAtOD,QAArD,mBAAXE,QAAoD,iBAApBA,OAAOC,SAAmC,SAAiBF,GAAO,cAAcA,GAA2B,SAAiBA,GAAO,OAAOA,GAAyB,mBAAXC,QAAyBD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,IAAyBA,GAExV,SAASK,gBAAgBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAIC,UAAU,qCAEhH,SAASC,kBAAkBC,EAAQC,GAAS,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,IAAIE,EAAaH,EAAMC,GAAIE,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAE7S,SAASO,aAAad,EAAae,EAAYC,GAAmJ,OAAhID,GAAYb,kBAAkBF,EAAYH,UAAWkB,GAAiBC,GAAad,kBAAkBF,EAAagB,GAAqBhB,EAEzM,SAASiB,mBAAmBC,GAAO,OAAOC,mBAAmBD,IAAQE,iBAAiBF,IAAQG,qBAE9F,SAASA,qBAAuB,MAAM,IAAIpB,UAAU,mDAEpD,SAASmB,iBAAiBE,GAAQ,GAAI5B,OAAOC,YAAYgB,OAAOW,IAAkD,uBAAzCX,OAAOd,UAAU0B,SAASC,KAAKF,GAAgC,OAAOG,MAAMC,KAAKJ,GAE1J,SAASH,mBAAmBD,GAAO,GAAIO,MAAME,QAAQT,GAAM,CAAE,IAAK,IAAIb,EAAI,EAAGuB,EAAO,IAAIH,MAAMP,EAAIZ,QAASD,EAAIa,EAAIZ,OAAQD,IAAOuB,EAAKvB,GAAKa,EAAIb,GAAM,OAAOuB,GAQ7J,IAAIC,OAAS,CACXC,sBAAuB,uBAjBnBC,YAAiB,SAAAC,GAAI,OAAIA,EAAKC,SAAW,UAAYD,EAAKC,QAAQC,eAClEC,WAAiB,SAAAC,GAAK,OAAIA,EAAMC,MAAQD,EAAMC,KAAK/B,OAAS,GAC5DgC,eAAiB,SAAAF,GAAK,OAAIA,EAAMC,KAAM,GAAIE,MAAO,IAAO,OAASH,EAAMC,KAAM,GAAIE,MAAO,GAAIN,QAAQC,eAEpGM,wBAA0B,SAAAJ,GAAK,OACpCnB,mBAAKmB,EAAMC,KAAM,GAAIE,OACnBE,IACA,SAAAC,GAAI,OAAIC,OAAOD,EAAKE,WAAaF,EAAKG,aAAaC,UAGhDC,iBA8BN,WACE,SAASA,IACPjD,gBAAgBkD,KAAMD,GA2CxB,OAxCAjC,aAAaiC,EAAkB,KAAM,CAAC,CACpClC,IAAK,UACLoC,MAAO,SApCKC,GACV,iBAAoBA,IACvBA,EAAWC,SAASC,iBAAiBF,IAIlC,aAAeA,EAASG,UAC3BH,EAAWA,EAASG,WAGrB,IAAIC,EAASrC,mBAAKiC,GAChBK,OAAOxB,aACPwB,OAAOpB,YACPoB,OAAOjB,gBAETgB,EAAOE,QAAQT,EAAiBU,cAChCH,EAAOE,QAAQ,SAAApB,GAAK,OAAIA,EAAMsB,UAAUC,IAAI9B,OAAO,4BAqChD,CACDhB,IAAK,eACLoC,MAAO,SApCUb,GACnB,GAAG,WAAA5C,QAAoB4C,KAAUL,YAAYK,GAC5C,MAAM,IAAIwB,MAAMxB,EAAQ,yBASzB,IANA,IAAIyB,EAAUrB,wBAAwBJ,GAM7B/B,EAAI,EAAGA,EAAI+B,EAAMC,KAAK/B,SAAUD,EAHxCY,mBAIamB,EAAMC,KAAKhC,GAJfkC,OACPE,IAAI,SAACC,EAAMrC,GAAP,OAAaqC,EAAKoB,QAAQC,sBAAwBF,EAASxD,IAAO,SA8ClE0C,EA7CT","file":"responsive-tables.min.js","sourcesContent":["/*\n * Responsive Tables (https://github.com/win0err/responsive-tables)\n * Copyright (c) 2017â€”2018 Sergei Kolesnikov\n *\n * Licensed under the MIT license (https://github.com/win0err/responsive-tables/blob/master/LICENSE)\n */\nimport styles from './responsive-tables.css'\n\nconst isTableNode    = node => node.tagName && 'table' === node.tagName.toLowerCase()\nconst isNotEmpty     = table => table.rows && table.rows.length > 0\nconst hasTableHeader = table => table.rows[ 0 ].cells[ 0 ] && 'th' === table.rows[ 0 ].cells[ 0 ].tagName.toLowerCase()\n\nconst collectHeadersFromTable = table =>\n\t[ ...table.rows[ 0 ].cells ]\n\t\t.map(\n\t\t\tcell => String(cell.innerText || cell.textContent).trim()\n\t\t)\n\nclass ResponsiveTables {\n\tstatic applyTo(elements) {\n\t\tif ('string' === typeof elements) {\n\t\t\telements = document.querySelectorAll(elements)\n\t\t}\n\n\t\t// if elements is a result of jQuery's selector\n\t\tif ('function' === elements.toArray) {\n\t\t\telements = elements.toArray()\n\t\t}\n\n\t\tlet tables = [ ...elements ]\n\t\t\t.filter(isTableNode)\n\t\t\t.filter(isNotEmpty)\n\t\t\t.filter(hasTableHeader)\n\n\t\ttables.forEach(ResponsiveTables.applyToTable)\n\t\ttables.forEach(table => table.classList.add(styles['responsive-table-js']))\n\t}\n\n\tstatic applyToTable(table) {\n\t\tif('object' !== typeof table || !isTableNode(table)) {\n\t\t\tthrow new Error(table + ' must be a table node')\n\t\t}\n\n\t\tlet headers = collectHeadersFromTable(table)\n\n\t\tconst applyHeaders = row =>\n\t\t\t[ ...row.cells ]\n\t\t\t\t.map((cell, i) => cell.dataset.responsiveTablesLabel = headers[ i ] || '')\n\n\t\tfor (let i = 1; i < table.rows.length; ++i) {\n\t\t\tapplyHeaders(table.rows[i])\n\t\t}\n\t}\n}"]}